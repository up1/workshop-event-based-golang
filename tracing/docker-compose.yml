services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  service1:
    build:
      context: ./service1
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      jaeger:
        condition: service_started
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    restart: unless-stopped

  service2:
    build:
      context: ./service2
      dockerfile: Dockerfile
    container_name: report-service
    ports:
      - "8081:8081"
    depends_on:
      rabbitmq:
        condition: service_healthy
      jaeger:
        condition: service_started
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    restart: unless-stopped

volumes:
  rabbitmq_data: